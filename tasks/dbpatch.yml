---
# Install latest patch for Oracle

- name: get opatch version
  command: "{{ora_user_env.ORACLE_HOME}}/OPatch/opatch version"
  become: yes
  become_user: "{{ oracle_user }}"
  environment: "{{ ora_user_env }}"
  register: opatch_version

- name: unzip opatch
  unarchive:
    src: "{{ oracle_installer_uri }}/{{ oracle_opatch }}"
    dest: "{{ ora_user_env.ORACLE_HOME }}"
    copy: no
    owner: "{{ oracle_user }}"
  when: opatch_version.stdout.find(oracle_opatch_version) == -1

- name: copy response file from files oracle
  copy: src=ocm.rsp dest={{ ora_user_env.ORACLE_HOME }}/ocm.rsp owner={{ oracle_user }}

- name: get patch list
  shell: "{{ ora_user_env.ORACLE_HOME }}/OPatch/opatch lsinventory |egrep '[0-9]{8,}'"
  environment: "{{ ora_user_env }}"
  become: yes
  become_user: "{{ oracle_user }}"
  register: patch_list
  failed_when: patch_list.rc > 1

- block:
    - name: stop oracle
      service: name=oracle state=stopped
      with_items: "{{oracle_latest_patches}}"
      when: ansible_connection != 'docker'

    - name: stop oracle on docker
      shell: /etc/init.d/oracle stop
      with_items: "{{oracle_latest_patches}}"
      when: ansible_connection == 'docker'

    - name: create patches folders
      file: name={{ oracle_tmp }}/{{ item.number }} state=directory owner={{ oracle_user }}
      with_items: "{{oracle_latest_patches}}"

    - name: unzip patches
      unarchive:
        src: "{{ oracle_installer_uri }}/{{ item.file_name }}"
        dest: "{{ oracle_tmp }}/{{ item.number }}"
        copy: no
        creates: "{{ oracle_tmp }}/{{ item.number }}/{{ item.number }}"
        owner: "{{ oracle_user }}"
      with_items: "{{oracle_latest_patches}}"

    - name: apply latest patch rdbms
      command: "{{ ora_user_env.ORACLE_HOME }}/OPatch/opatch {{item.apply | default('apply')}} -silent -ocmrf {{ ora_user_env.ORACLE_HOME }}/ocm.rsp {{ oracle_tmp }}/{{ item.number }}/{{ item.number }}/{{ item.subfolder | default('')}}"
      environment: "{{ ora_user_env }}"
      become: yes
      become_user: "{{ oracle_user }}"
      with_items: "{{oracle_latest_patches}}"
  when: patch_list.stdout.find(item.number) == -1
