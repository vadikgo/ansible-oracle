---
# tasks for the oracle install
#
# This role is a rough port of an internal oracle installation script. It makes
# a few assumptions:
# - You've already set up your hostname. Both the CentOS installer and Vagrant
#   will do this for you.
# - You've already set up ip[6]tables the way you like.
# - You're running this task as a privileged user (root or sudo)
# - You've already set up any extra Yum repositories.

- block:
  - name: oracle-recommended selinux
    selinux: policy=targeted state=disabled
    register: selinux_state

  - name: disable setenforce # because oracle says so, that's why
    command: /usr/sbin/setenforce 0
    when: selinux_state.changed
  when: not oracle_docker

# it's in the oracle recommendations. i don't even know.
- name: oracle-recommended PAM config
  lineinfile:
    dest: /etc/pam.d/login
    state: present
    line: "session required pam_limits.so"

- name: oracle-recommended security limits
  lineinfile:
    dest: /etc/security/limits.conf
    state: present
    line: "{{ item }}"
  with_items:
    - "oracle soft nproc 2047"
    - "oracle hard nproc 16384"
    - "oracle soft nofile 1024"
    - "oracle hard nofile 65536"

- name: create the oracle installation path
  file:
    mode: 0755
    path: "{{ oracle_path }}"
    state: directory
    group: "{{ oracle_group }}"
    owner: "{{ oracle_user }}"

- name: chown the oracle installer directory to the oracle user
  file:
    group: "{{ oracle_group }}"
    owner: "{{ oracle_user }}"
    path: "{{ oracle_tmp }}/database"
    state: directory
    recurse: yes

- name: check if /etc/oratab exists
  stat: path=/etc/oratab
  register: oratab

- name: find database
  stat: path={{ ora_user_env.ORACLE_BASE }}/oradata/{{ora_user_env.ORACLE_SID}}
  register: db_dir

- block:
    - name: unzip installer
      unarchive:
        src: "{{ oracle_installer_uri }}/{{ item }}"
        dest: "{{ oracle_tmp }}"
        copy: no
        owner: "{{ oracle_user }}"
      with_items: "{{oracle_installer}}"

    - name: install oracle
      become: yes
      become_user: "{{ oracle_user }}"
      environment: "{{ora_user_env}}"
      command: "{{ oracle_tmp }}/database/runInstaller -silent -noconfig -waitforcompletion -ignoreSysPrereqs -ignorePrereq -responseFile {{ oracle_tmp }}/db_install.rsp"
      args:
          creates: "{{ oracle_path }}/oraInventory/orainstRoot.sh"
      register: install_result
      failed_when: install_result.rc not in [0, 6]

    - name: general oracle post-installation
      command: "{{ oracle_path }}/oraInventory/orainstRoot.sh"
      when: install_result.changed

    - name: db-specific oracle post-installation
      command: "{{ ora_user_env.ORACLE_HOME }}/root.sh"
      when: install_result.changed

  when: not (db_dir.stat.exists and oratab.stat.exists)

- name: entrypoint for docker
  template:
    src: start_oracle.sh
    dest: /start_oracle.sh
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"
    mode: 0755
  when: oracle_docker
